
### Workshop 1: การใช้คำสั่งพื้นฐานใน Linux
**วัตถุประสงค์:** เรียนรู้และฝึกใช้คำสั่งพื้นฐานในการจัดการไฟล์และไดเร็กทอรีใน Linux  
**คำสั่งที่ใช้:** `ls`, `cd`, `cp`, `mv`, `rm`  

1. **ตรวจสอบไฟล์และไดเร็กทอรี**
   - ใช้คำสั่ง `ls` เพื่อดูรายการไฟล์ในไดเร็กทอรีปัจจุบัน
   - ตัวอย่าง:  
     ```bash
     ls -l
     ```
   - ให้นักเรียนลองใช้คำสั่ง `ls -a` เพื่อแสดงไฟล์ที่ซ่อนอยู่

2. **การสร้างไดเร็กทอรีและเปลี่ยนที่ทำงาน**
   - ใช้คำสั่ง `mkdir` เพื่อสร้างไดเร็กทอรีใหม่  
     ```bash
     mkdir my_directory
     ```
   - ใช้คำสั่ง `cd` เพื่อเข้าไปในไดเร็กทอรีที่สร้างใหม่  
     ```bash
     cd my_directory
     ```

3. **คัดลอกและย้ายไฟล์**
   - คัดลอกไฟล์ด้วย `cp`  
     ```bash
     cp /path/to/file /destination/path
     ```
   - ย้ายไฟล์ด้วย `mv`  
     ```bash
     mv oldfile newfile
     ```

4. **ลบไฟล์และไดเร็กทอรี**
   - ใช้ `rm` เพื่อลบไฟล์  
     ```bash
     rm filename
     ```
   - ใช้ `rm -r` เพื่อลบไดเร็กทอรีพร้อมกับเนื้อหาภายใน

---

### Workshop 2: การจัดการผู้ใช้และสิทธิ์การเข้าถึง
**วัตถุประสงค์:** เรียนรู้การสร้างและจัดการผู้ใช้ การกำหนดสิทธิ์พื้นฐานให้ผู้ใช้  
**คำสั่งที่ใช้:** `useradd`, `passwd`, `usermod`, `chmod`, `chown`

1. **สร้างผู้ใช้ใหม่**
   - ใช้ `useradd` สร้างผู้ใช้ใหม่ชื่อ "student"  
     ```bash
     sudo useradd student
     ```
   - ตั้งรหัสผ่านให้ผู้ใช้  
     ```bash
     sudo passwd student
     ```

2. **เปลี่ยนกลุ่มผู้ใช้**
   - ใช้ `usermod` เพื่อเพิ่มผู้ใช้เข้าในกลุ่มใหม่  
     ```bash
     sudo usermod -aG sudo student
     ```

3. **การจัดการสิทธิ์การเข้าถึง**
   - สร้างไฟล์ทดสอบ `testfile.txt` และใช้ `chmod` เพื่อกำหนดสิทธิ์ให้เป็น `755`  
     ```bash
     touch testfile.txt
     chmod 755 testfile.txt
     ```

---

### Workshop 3: การตั้งค่าเครือข่ายเบื้องต้น
**วัตถุประสงค์:** เรียนรู้การตรวจสอบสถานะเครือข่าย การตั้งค่า IP และการเชื่อมต่อ  
**คำสั่งที่ใช้:** `ifconfig`, `ping`, `route`, `netstat`

1. **ตรวจสอบสถานะเครือข่าย**
   - ใช้ `ifconfig` เพื่อตรวจสอบที่อยู่ IP ของเครื่อง  
     ```bash
     ifconfig
     ```

2. **ทดสอบการเชื่อมต่อกับเครือข่าย**
   - ใช้ `ping` เพื่อตรวจสอบการเชื่อมต่อกับเครือข่าย เช่น ทดสอบการเชื่อมต่อกับ Google  
     ```bash
     ping google.com
     ```

3. **ตรวจสอบเส้นทางการเชื่อมต่อ**
   - ใช้ `netstat` เพื่อตรวจสอบการเชื่อมต่อที่ใช้งานในระบบ  
     ```bash
     netstat -tuln
     ```

---
